{"version":3,"sources":["../../src/wkt-parser.ts"],"names":["geometryType","parseWKT","wktString","toLocaleLowerCase","startsWith","coordinates","parsePoint","type","POINT","point","split","trim","map","p","parseFloat"],"mappings":";;;;;;;IAKYA,Y;;;WAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,4BAAAA,Y;;AAIL,SAASC,QAAT,CAAkBC,SAAlB,EAAsD;AAEzDA,EAAAA,SAAS,GAAGA,SAAS,CAACC,iBAAV,EAAZ;;AAEA,MAAGD,SAAS,CAACE,UAAV,CAAqB,OAArB,CAAH,EAAiC;AAC7B,QAAMC,WAAW,GAAGC,UAAU,CAACJ,SAAD,CAA9B;AACA,WAAO;AAACG,MAAAA,WAAW,EAAXA,WAAD;AAAcE,MAAAA,IAAI,EAAEP,YAAY,CAACQ;AAAjC,KAAP;AACH;AAEJ;;AAED,SAASF,UAAT,CAAoBJ,SAApB,EAAgD;AAC5C,MAAMO,KAAK,GAAGP,SAAS,CAACQ,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAAwBA,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,EAAsCC,IAAtC,EAAd,CAD4C,CACiB;;AAC7D,SAAOF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBE,GAAjB,CAAqB,UAAAC,CAAC;AAAA,WAAIC,UAAU,CAACD,CAAD,CAAd;AAAA,GAAtB,CAAP;AACH","sourcesContent":["export interface WKTGeometry{\n    type: geometryType,\n    coordinates: any\n}\n\nexport enum geometryType{\n    POINT=\"point\"\n}\n\nexport function parseWKT(wktString: string): WKTGeometry|null{\n\n    wktString = wktString.toLocaleLowerCase();\n\n    if(wktString.startsWith(\"point\")){\n        const coordinates = parsePoint(wktString);\n        return {coordinates, type: geometryType.POINT}\n    }\n\n}\n\nfunction parsePoint(wktString: string): number[]{\n    const point = wktString.split(\"(\")[1].split(\")\")[0].trim();  // Ex [\"0 0 0\"]\n    return point.split(\" \").map(p => parseFloat(p));\n}"],"file":"wkt-parser.js"}