{"version":3,"sources":["../../src/index.ts"],"names":["DF","DataFactory","geoSPARQLFunctions","args","decimals","undefined","parseFloat","value","termType","p1","p2","type","geometryType","POINT","a","coordinates","b","c","d","round","Math","sqrt","literal","toString","namedNode","num","Number","EPSILON"],"mappings":"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","sourcesContent":["import { DataFactory } from \"rdf-data-factory\";\nimport type * as RDF from '@rdfjs/types';\nimport { geometryType, parseWKT } from \"./wkt-parser\";\n\nconst DF = new DataFactory();\n\nexport const geoSPARQLFunctions = {\n\n    // geosf:distance(p1, p2, decimals)\n    'http://www.opengis.net/def/function/geosparql/distance'(args: RDF.Term[]) {\n        const decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n        if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n            const p1 = parseWKT(args[0].value);\n            const p2 = parseWKT(args[1].value);\n\n            if(p1 && p2){\n\n                if(p1.type == geometryType.POINT && p2.type == geometryType.POINT){\n\n                    const a = p1.coordinates[0] - p2.coordinates[0];\n                    const b = p1.coordinates[1] - p2.coordinates[1];\n                    const c = p1.coordinates[2] - p2.coordinates[2];\n        \n                    const d: number = round(Math.sqrt(a * a + b * b + c * c), decimals);\n                    // if(p1.length == 2 && p2.length == 2){\n        \n                    // } \n        \n                    return DF.literal(d.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#decimal'));\n\n                }\n                \n            }\n            \n        }\n        return DF.literal(\"ERROR\");\n        \n    },\n\n    // geosf:sfWithin(p1, p2, decimals)\n    'http://www.opengis.net/def/function/geosparql/inside'(args: RDF.Term[]) {\n        const decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n        if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n            const p1 = parseWKT(args[0].value);\n            const p2 = parseWKT(args[1].value);\n\n            if(p1 && p2){\n\n                if(p1.type == geometryType.POINT && p2.type == geometryType.POINT){\n\n                    const a = p1.coordinates[0] - p2.coordinates[0];\n                    const b = p1.coordinates[1] - p2.coordinates[1];\n                    const c = p1.coordinates[2] - p2.coordinates[2];\n        \n                    const d: number = round(Math.sqrt(a * a + b * b + c * c), decimals);\n                    // if(p1.length == 2 && p2.length == 2){\n        \n                    // } \n        \n                    return DF.literal(d.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#decimal'));\n\n                }\n                \n            }\n            \n        }\n        return DF.literal(\"ERROR\");\n        \n    }\n\n}\n\nfunction round(num: number, decimals: number = 0): number{\n    return Math.round( num * (10 ** decimals) + Number.EPSILON ) / (10 ** decimals);\n}"],"file":"index.js"}