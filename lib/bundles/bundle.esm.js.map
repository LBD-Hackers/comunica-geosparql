{"version":3,"file":"bundle.esm.js","sources":["../../node_modules/rdf-data-factory/lib/BlankNode.js","../../node_modules/rdf-data-factory/lib/DefaultGraph.js","../../node_modules/rdf-data-factory/lib/NamedNode.js","../../node_modules/rdf-data-factory/lib/Literal.js","../../node_modules/rdf-data-factory/lib/Quad.js","../../node_modules/rdf-data-factory/lib/Variable.js","../../node_modules/rdf-data-factory/lib/DataFactory.js","../../node_modules/rdf-data-factory/index.js","../../src/wkt-parser.ts","../../src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlankNode = void 0;\n/**\n * A term that represents an RDF blank node with a label.\n */\nclass BlankNode {\n    constructor(value) {\n        this.termType = 'BlankNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'BlankNode' && other.value === this.value;\n    }\n}\nexports.BlankNode = BlankNode;\n//# sourceMappingURL=BlankNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGraph = void 0;\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass DefaultGraph {\n    constructor() {\n        this.termType = 'DefaultGraph';\n        this.value = '';\n        // Private constructor\n    }\n    equals(other) {\n        return !!other && other.termType === 'DefaultGraph';\n    }\n}\nexports.DefaultGraph = DefaultGraph;\nDefaultGraph.INSTANCE = new DefaultGraph();\n//# sourceMappingURL=DefaultGraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NamedNode = void 0;\n/**\n * A term that contains an IRI.\n */\nclass NamedNode {\n    constructor(value) {\n        this.termType = 'NamedNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'NamedNode' && other.value === this.value;\n    }\n}\nexports.NamedNode = NamedNode;\n//# sourceMappingURL=NamedNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && other.datatype.equals(this.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n//# sourceMappingURL=Literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n//# sourceMappingURL=Quad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\n/**\n * A term that represents a variable.\n */\nclass Variable {\n    constructor(value) {\n        this.termType = 'Variable';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'Variable' && other.value === this.value;\n    }\n}\nexports.Variable = Variable;\n//# sourceMappingURL=Variable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataFactory = void 0;\nconst BlankNode_1 = require(\"./BlankNode\");\nconst DefaultGraph_1 = require(\"./DefaultGraph\");\nconst Literal_1 = require(\"./Literal\");\nconst NamedNode_1 = require(\"./NamedNode\");\nconst Quad_1 = require(\"./Quad\");\nconst Variable_1 = require(\"./Variable\");\nlet dataFactoryCounter = 0;\n/**\n * A factory for instantiating RDF terms and quads.\n */\nclass DataFactory {\n    constructor(options) {\n        this.blankNodeCounter = 0;\n        options = options || {};\n        this.blankNodePrefix = options.blankNodePrefix || `df_${dataFactoryCounter++}_`;\n    }\n    /**\n     * @param value The IRI for the named node.\n     * @return A new instance of NamedNode.\n     * @see NamedNode\n     */\n    namedNode(value) {\n        return new NamedNode_1.NamedNode(value);\n    }\n    /**\n     * @param value The optional blank node identifier.\n     * @return A new instance of BlankNode.\n     *         If the `value` parameter is undefined a new identifier\n     *         for the blank node is generated for each call.\n     * @see BlankNode\n     */\n    blankNode(value) {\n        return new BlankNode_1.BlankNode(value || `${this.blankNodePrefix}${this.blankNodeCounter++}`);\n    }\n    /**\n     * @param value              The literal value.\n     * @param languageOrDatatype The optional language or datatype.\n     *                           If `languageOrDatatype` is a NamedNode,\n     *                           then it is used for the value of `NamedNode.datatype`.\n     *                           Otherwise `languageOrDatatype` is used for the value\n     *                           of `NamedNode.language`.\n     * @return A new instance of Literal.\n     * @see Literal\n     */\n    literal(value, languageOrDatatype) {\n        return new Literal_1.Literal(value, languageOrDatatype);\n    }\n    /**\n     * This method is optional.\n     * @param value The variable name\n     * @return A new instance of Variable.\n     * @see Variable\n     */\n    variable(value) {\n        return new Variable_1.Variable(value);\n    }\n    /**\n     * @return An instance of DefaultGraph.\n     */\n    defaultGraph() {\n        return DefaultGraph_1.DefaultGraph.INSTANCE;\n    }\n    /**\n     * @param subject   The quad subject term.\n     * @param predicate The quad predicate term.\n     * @param object    The quad object term.\n     * @param graph     The quad graph term.\n     * @return A new instance of Quad.\n     * @see Quad\n     */\n    quad(subject, predicate, object, graph) {\n        return new Quad_1.Quad(subject, predicate, object, graph || this.defaultGraph());\n    }\n    /**\n     * Create a deep copy of the given term using this data factory.\n     * @param original An RDF term.\n     * @return A deep copy of the given term.\n     */\n    fromTerm(original) {\n        // TODO: remove nasty any casts when this TS bug has been fixed:\n        //  https://github.com/microsoft/TypeScript/issues/26933\n        switch (original.termType) {\n            case 'NamedNode':\n                return this.namedNode(original.value);\n            case 'BlankNode':\n                return this.blankNode(original.value);\n            case 'Literal':\n                if (original.language) {\n                    return this.literal(original.value, original.language);\n                }\n                if (!original.datatype.equals(Literal_1.Literal.XSD_STRING)) {\n                    return this.literal(original.value, this.fromTerm(original.datatype));\n                }\n                return this.literal(original.value);\n            case 'Variable':\n                return this.variable(original.value);\n            case 'DefaultGraph':\n                return this.defaultGraph();\n            case 'Quad':\n                return this.quad(this.fromTerm(original.subject), this.fromTerm(original.predicate), this.fromTerm(original.object), this.fromTerm(original.graph));\n        }\n    }\n    /**\n     * Create a deep copy of the given quad using this data factory.\n     * @param original An RDF quad.\n     * @return A deep copy of the given quad.\n     */\n    fromQuad(original) {\n        return this.fromTerm(original);\n    }\n    /**\n     * Reset the internal blank node counter.\n     */\n    resetBlankNodeCounter() {\n        this.blankNodeCounter = 0;\n    }\n}\nexports.DataFactory = DataFactory;\n//# sourceMappingURL=DataFactory.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/BlankNode\"), exports);\n__exportStar(require(\"./lib/DataFactory\"), exports);\n__exportStar(require(\"./lib/DefaultGraph\"), exports);\n__exportStar(require(\"./lib/Literal\"), exports);\n__exportStar(require(\"./lib/NamedNode\"), exports);\n__exportStar(require(\"./lib/Quad\"), exports);\n__exportStar(require(\"./lib/Variable\"), exports);\n//# sourceMappingURL=index.js.map","export interface WKTGeometry{\n    type: geometryType,\n    coordinates: any\n}\n\nexport enum geometryType{\n    POINT=\"point\"\n}\n\nexport function parseWKT(wktString: string): WKTGeometry|null{\n\n    wktString = wktString.toLocaleLowerCase();\n\n    if(wktString.startsWith(\"point\")){\n        const coordinates = parsePoint(wktString);\n        return {coordinates, type: geometryType.POINT}\n    }\n\n}\n\nfunction parsePoint(wktString: string): number[]{\n    const point = wktString.split(\"(\")[1].split(\")\")[0].trim();  // Ex [\"0 0 0\"]\n    return point.split(\" \").map(p => parseFloat(p));\n}","import { DataFactory } from \"rdf-data-factory\";\nimport type * as RDF from '@rdfjs/types';\nimport { geometryType, parseWKT } from \"./wkt-parser\";\n\nconst DF = new DataFactory();\n\nexport const geoSPARQLFunctions = {\n\n    // geosf:distance(p1, p2, decimals)\n    'http://www.opengis.net/def/function/geosparql/distance'(args: RDF.Term[]) {\n        const decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n        if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n            const p1 = parseWKT(args[0].value);\n            const p2 = parseWKT(args[1].value);\n\n            if(p1 && p2){\n\n                if(p1.type == geometryType.POINT && p2.type == geometryType.POINT){\n\n                    const a = p1.coordinates[0] - p2.coordinates[0];\n                    const b = p1.coordinates[1] - p2.coordinates[1];\n                    const c = p1.coordinates[2] - p2.coordinates[2];\n        \n                    const d: number = round(Math.sqrt(a * a + b * b + c * c), decimals);\n                    // if(p1.length == 2 && p2.length == 2){\n        \n                    // } \n        \n                    return DF.literal(d.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#decimal'));\n\n                }\n                \n            }\n            \n        }\n        return DF.literal(\"ERROR\");\n        \n    },\n\n    // geosf:sfWithin(p1, p2, decimals)\n    'http://www.opengis.net/def/function/geosparql/inside'(args: RDF.Term[]) {\n        const decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n        if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n            const p1 = parseWKT(args[0].value);\n            const p2 = parseWKT(args[1].value);\n\n            if(p1 && p2){\n\n                if(p1.type == geometryType.POINT && p2.type == geometryType.POINT){\n\n                    const a = p1.coordinates[0] - p2.coordinates[0];\n                    const b = p1.coordinates[1] - p2.coordinates[1];\n                    const c = p1.coordinates[2] - p2.coordinates[2];\n        \n                    const d: number = round(Math.sqrt(a * a + b * b + c * c), decimals);\n                    // if(p1.length == 2 && p2.length == 2){\n        \n                    // } \n        \n                    return DF.literal(d.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#decimal'));\n\n                }\n                \n            }\n            \n        }\n        return DF.literal(\"ERROR\");\n        \n    }\n\n}\n\nfunction round(num: number, decimals: number = 0): number{\n    return Math.round( num * (10 ** decimals) + Number.EPSILON ) / (10 ** decimals);\n}"],"names":["BlankNode_1","DefaultGraph_1","NamedNode_1","Literal_1","require$$0","Quad_1","Variable_1","DataFactory_1","require$$1","require$$2","require$$3","require$$4","require$$5","this","require$$6","geometryType","parseWKT","wktString","toLocaleLowerCase","startsWith","coordinates","parsePoint","type","POINT","point","split","trim","map","p","parseFloat","DF","DataFactory","geoSPARQLFunctions","args","decimals","undefined","value","termType","p1","p2","a","b","c","d","round","Math","sqrt","literal","toString","namedNode","num","Number","EPSILON"],"mappings":"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"}