{"version":3,"file":"bundle.umd.js","sources":["../../node_modules/rdf-data-factory/lib/BlankNode.js","../../node_modules/rdf-data-factory/lib/DefaultGraph.js","../../node_modules/rdf-data-factory/lib/NamedNode.js","../../node_modules/rdf-data-factory/lib/Literal.js","../../node_modules/rdf-data-factory/lib/Quad.js","../../node_modules/rdf-data-factory/lib/Variable.js","../../node_modules/rdf-data-factory/lib/DataFactory.js","../../node_modules/rdf-data-factory/index.js","../../src/wkt-parser.ts","../../node_modules/point-in-polygon/flat.js","../../node_modules/point-in-polygon/nested.js","../../node_modules/point-in-polygon/index.js","../../src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlankNode = void 0;\n/**\n * A term that represents an RDF blank node with a label.\n */\nclass BlankNode {\n    constructor(value) {\n        this.termType = 'BlankNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'BlankNode' && other.value === this.value;\n    }\n}\nexports.BlankNode = BlankNode;\n//# sourceMappingURL=BlankNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGraph = void 0;\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass DefaultGraph {\n    constructor() {\n        this.termType = 'DefaultGraph';\n        this.value = '';\n        // Private constructor\n    }\n    equals(other) {\n        return !!other && other.termType === 'DefaultGraph';\n    }\n}\nexports.DefaultGraph = DefaultGraph;\nDefaultGraph.INSTANCE = new DefaultGraph();\n//# sourceMappingURL=DefaultGraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NamedNode = void 0;\n/**\n * A term that contains an IRI.\n */\nclass NamedNode {\n    constructor(value) {\n        this.termType = 'NamedNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'NamedNode' && other.value === this.value;\n    }\n}\nexports.NamedNode = NamedNode;\n//# sourceMappingURL=NamedNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && other.datatype.equals(this.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n//# sourceMappingURL=Literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n//# sourceMappingURL=Quad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\n/**\n * A term that represents a variable.\n */\nclass Variable {\n    constructor(value) {\n        this.termType = 'Variable';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'Variable' && other.value === this.value;\n    }\n}\nexports.Variable = Variable;\n//# sourceMappingURL=Variable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataFactory = void 0;\nconst BlankNode_1 = require(\"./BlankNode\");\nconst DefaultGraph_1 = require(\"./DefaultGraph\");\nconst Literal_1 = require(\"./Literal\");\nconst NamedNode_1 = require(\"./NamedNode\");\nconst Quad_1 = require(\"./Quad\");\nconst Variable_1 = require(\"./Variable\");\nlet dataFactoryCounter = 0;\n/**\n * A factory for instantiating RDF terms and quads.\n */\nclass DataFactory {\n    constructor(options) {\n        this.blankNodeCounter = 0;\n        options = options || {};\n        this.blankNodePrefix = options.blankNodePrefix || `df_${dataFactoryCounter++}_`;\n    }\n    /**\n     * @param value The IRI for the named node.\n     * @return A new instance of NamedNode.\n     * @see NamedNode\n     */\n    namedNode(value) {\n        return new NamedNode_1.NamedNode(value);\n    }\n    /**\n     * @param value The optional blank node identifier.\n     * @return A new instance of BlankNode.\n     *         If the `value` parameter is undefined a new identifier\n     *         for the blank node is generated for each call.\n     * @see BlankNode\n     */\n    blankNode(value) {\n        return new BlankNode_1.BlankNode(value || `${this.blankNodePrefix}${this.blankNodeCounter++}`);\n    }\n    /**\n     * @param value              The literal value.\n     * @param languageOrDatatype The optional language or datatype.\n     *                           If `languageOrDatatype` is a NamedNode,\n     *                           then it is used for the value of `NamedNode.datatype`.\n     *                           Otherwise `languageOrDatatype` is used for the value\n     *                           of `NamedNode.language`.\n     * @return A new instance of Literal.\n     * @see Literal\n     */\n    literal(value, languageOrDatatype) {\n        return new Literal_1.Literal(value, languageOrDatatype);\n    }\n    /**\n     * This method is optional.\n     * @param value The variable name\n     * @return A new instance of Variable.\n     * @see Variable\n     */\n    variable(value) {\n        return new Variable_1.Variable(value);\n    }\n    /**\n     * @return An instance of DefaultGraph.\n     */\n    defaultGraph() {\n        return DefaultGraph_1.DefaultGraph.INSTANCE;\n    }\n    /**\n     * @param subject   The quad subject term.\n     * @param predicate The quad predicate term.\n     * @param object    The quad object term.\n     * @param graph     The quad graph term.\n     * @return A new instance of Quad.\n     * @see Quad\n     */\n    quad(subject, predicate, object, graph) {\n        return new Quad_1.Quad(subject, predicate, object, graph || this.defaultGraph());\n    }\n    /**\n     * Create a deep copy of the given term using this data factory.\n     * @param original An RDF term.\n     * @return A deep copy of the given term.\n     */\n    fromTerm(original) {\n        // TODO: remove nasty any casts when this TS bug has been fixed:\n        //  https://github.com/microsoft/TypeScript/issues/26933\n        switch (original.termType) {\n            case 'NamedNode':\n                return this.namedNode(original.value);\n            case 'BlankNode':\n                return this.blankNode(original.value);\n            case 'Literal':\n                if (original.language) {\n                    return this.literal(original.value, original.language);\n                }\n                if (!original.datatype.equals(Literal_1.Literal.XSD_STRING)) {\n                    return this.literal(original.value, this.fromTerm(original.datatype));\n                }\n                return this.literal(original.value);\n            case 'Variable':\n                return this.variable(original.value);\n            case 'DefaultGraph':\n                return this.defaultGraph();\n            case 'Quad':\n                return this.quad(this.fromTerm(original.subject), this.fromTerm(original.predicate), this.fromTerm(original.object), this.fromTerm(original.graph));\n        }\n    }\n    /**\n     * Create a deep copy of the given quad using this data factory.\n     * @param original An RDF quad.\n     * @return A deep copy of the given quad.\n     */\n    fromQuad(original) {\n        return this.fromTerm(original);\n    }\n    /**\n     * Reset the internal blank node counter.\n     */\n    resetBlankNodeCounter() {\n        this.blankNodeCounter = 0;\n    }\n}\nexports.DataFactory = DataFactory;\n//# sourceMappingURL=DataFactory.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/BlankNode\"), exports);\n__exportStar(require(\"./lib/DataFactory\"), exports);\n__exportStar(require(\"./lib/DefaultGraph\"), exports);\n__exportStar(require(\"./lib/Literal\"), exports);\n__exportStar(require(\"./lib/NamedNode\"), exports);\n__exportStar(require(\"./lib/Quad\"), exports);\n__exportStar(require(\"./lib/Variable\"), exports);\n//# sourceMappingURL=index.js.map","export interface WKTGeometry{\n    type: geometryType,\n    value: any\n}\n\nexport enum geometryType{\n    POINT=\"point\",\n    POINTZ=\"pointz\",\n    POLYGON=\"polygon\",\n    POLYGONZ=\"polygonz\",\n    UNKNOWN=\"unknown\"\n}\n\nexport const typeMap = {\n    \"point\": geometryType.POINT,\n    \"pointz\": geometryType.POINTZ,\n    \"polygon\": geometryType.POLYGON,\n    \"polygonz\": geometryType.POLYGONZ\n}\n\nexport function parseWKT(wktString: string): WKTGeometry|null{\n\n    const type = getType(wktString);\n\n    if(type == geometryType.POINT || type == geometryType.POINTZ){\n        const coordinates = parsePoint(wktString);\n        return {value: coordinates, type}\n    }\n\n    if(type == geometryType.POLYGON){\n        const coordinates = parsePolygon(wktString);\n        return {value: coordinates, type}\n    }\n\n}\n\nfunction getType(wktString: string): geometryType{\n\n    wktString = wktString.toLocaleLowerCase();\n\n    let typeStr: string = wktString.split(\"(\")[0];  // get everything before the paranthesis\n    typeStr = typeStr.replace(/\\s+/, \"\");           // remove all white spaces\n    \n    if(Object.keys(typeMap).indexOf(typeStr) != -1){\n        return typeMap[typeStr];\n    }\n\n    return geometryType.UNKNOWN;\n}\n\nfunction parsePolygon(wktString: string): number[]{\n\n    let polygon = [];\n\n    // How many parantheses?\n    const count = wktString.split(\"(\").length;\n    \n    // Non-donut polygon\n    if(count == 2){\n        const points = wktString.split(\"(\")[1].split(\")\")[0].trim();  // Ex [\"0 0 0\"]\n        points.split(\",\").map(point => {\n            point = point.trim();\n            polygon.push(parseStrCoordinate(point));\n        });\n    }\n\n    // Donut polygon\n    else{\n        console.log(wktString);\n        console.log(\"Non-donut not yet supported!!\");\n    }\n\n    return polygon;\n}\n\nfunction parsePoint(wktString: string): number[]{\n    const point = wktString.split(\"(\")[1].split(\")\")[0].trim();  // Ex [\"0 0 0\"]\n    return parseStrCoordinate(point);\n}\n\nfunction parseStrCoordinate(strCoordinate: string): number[]{\n    return strCoordinate.split(\" \").map(p => parseFloat(p));\n}","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","import { DataFactory } from \"rdf-data-factory\";\nimport type * as RDF from '@rdfjs/types';\nimport { geometryType, parseWKT } from \"./wkt-parser\";\nimport pointInPolygon from \"point-in-polygon\";\n\nconst DF = new DataFactory();\n\nexport const geoSPARQLFunctions = {\n\n    // geosf:distance(p1, p2, decimals, multiplicationFactor)\n    'http://www.opengis.net/def/function/geosparql/distance'(args: RDF.Term[]) {\n        \n        // Set defaults\n        const decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n        const mf = args[3] != undefined ? parseFloat(args[3].value) : 1;\n\n        if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n            const p1 = parseWKT(args[0].value);\n            const p2 = parseWKT(args[1].value);\n\n            if(p1 && p2 && p1.value && p2.value){\n\n                const a = p1.value[0] - p2.value[0];\n                const b = p1.value[1] - p2.value[1];\n                let d: number;\n\n                // XY\n                if(p1.type == geometryType.POINT && p2.type == geometryType.POINT){\n                    d = Math.sqrt(a * a + b * b);\n                }\n\n                // XYZ\n                if(p1.type == geometryType.POINTZ && p2.type == geometryType.POINTZ){\n                    const c = p1.value[2] - p2.value[2]; // Get z- coordinates\n                    d = Math.sqrt(a * a + b * b + c * c);\n                }\n\n                // Apply multiplication factor and round\n                d = d * mf;\n                d = round(d, decimals);\n\n                return DF.literal(d.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#decimal'));\n                \n            }\n            \n        }\n        return DF.literal(\"ERROR\");\n        \n    },\n\n    // geosf:inside(point, polygon)\n    'http://www.opengis.net/def/function/geosparql/inside'(args: RDF.Term[]) {\n        const decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n        if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n            const point = parseWKT(args[0].value);\n            const polygon = parseWKT(args[1].value);\n\n            if(point && polygon && point.value && polygon.value.length){\n\n                if(polygon.type == geometryType.POLYGON){\n\n                    const pg = polygon.value;\n                    let p: number[] = point.value;\n\n                    if(point.type == geometryType.POINTZ){\n                        // Pop last item to make XY instead of XYZ\n                        p.pop();\n                    }\n                    \n                    const inside = pointInPolygon(p, pg);\n                    return DF.literal(inside.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#boolean'));\n\n                }\n                \n            }\n            \n        }\n        return DF.literal(\"ERROR\");\n        \n    }\n\n}\n\nfunction round(num: number, decimals: number = 0): number{\n    return Math.round( num * (10 ** decimals) + Number.EPSILON ) / (10 ** decimals);\n}"],"names":["BlankNode_1","DefaultGraph_1","NamedNode_1","Literal_1","require$$0","Quad_1","Variable_1","DataFactory_1","require$$1","require$$2","require$$3","require$$4","require$$5","this","require$$6","geometryType","typeMap","POINT","POINTZ","POLYGON","POLYGONZ","parseWKT","wktString","type","getType","coordinates","parsePoint","value","parsePolygon","toLocaleLowerCase","typeStr","split","replace","Object","keys","indexOf","UNKNOWN","polygon","count","length","points","trim","map","point","push","parseStrCoordinate","console","log","strCoordinate","p","parseFloat","pointInPolygonModule","DF","DataFactory","geoSPARQLFunctions","args","decimals","undefined","mf","termType","p1","p2","a","b","d","Math","sqrt","c","round","literal","toString","namedNode","pg","pop","inside","pointInPolygon","num","Number","EPSILON"],"mappings":"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"}